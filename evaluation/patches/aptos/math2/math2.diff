1,2c1,3
< // Math implementation for number manipulation.
< module pancake::math {
---
> #[evm_contract]
> module Evm::math2 {
>     #[callable(sig=b"sqrt(uint128) returns (uint128)")]
21a23
>     #[callable(sig=b"min(uint128,uint128) returns (uint128)")]
25a28
>     #[callable(sig=b"maxU64(uint64,uint64) returns (uint64)")]
29a33
>     #[callable(sig=b"max(uint128,uint128) returns (uint128)")]
34c38,39
<     public fun pow(base: u128, exp: u8): u128 {
---
>     #[callable(sig=b"pow(uint128,uint8) returns (uint128)")]
>     public fun pow(base: u128, xp: u8): u128 {
37,38c42,43
<             if (exp & 1 == 1) { result = result * base; };
<             exp = exp >> 1;
---
>             if (xp & 1 == 1) { result = result * base; };
>             xp = xp >> 1;
40c45
<             if (exp == 0u8) { break };
---
>             if (xp == 0u8) { break };
62c67
< }
---
> }
\ No newline at end of file
